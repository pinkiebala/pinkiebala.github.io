{"version":3,"sources":["webpack:///./src/components/Tags.tsx","webpack:///./src/templates/blog.tsx"],"names":["Tags","tags","className","map","tag","key","Template","markdownRemark","data","frontmatter","title","date","html","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"6MAoBeA,EAlBgD,SAAC,GAG1D,IAFJC,EAEI,EAFJA,KAEI,IADJC,iBACI,MADQ,GACR,EACJ,OACE,wBAAIA,UAAWA,GACZD,EAAKE,KAAI,SAAAC,GAAG,OACX,wBACEC,IAAKD,EACLF,UAAU,wDAETE,QCTI,SAASE,EAAT,GAEZ,IACOC,EADP,EADDC,KAEQD,eADP,EAKGA,EAFFE,YAAeC,EAHhB,EAGgBA,MAAOC,EAHvB,EAGuBA,KAAMV,EAH7B,EAG6BA,KAC5BW,EACEL,EADFK,KAEF,OACE,6BAASV,UAAU,6BACjB,gCACE,kBAAC,EAAD,CAAMD,KAAMA,EAAMC,UAAU,SAC5B,wBAAIA,UAAU,2BAA2BQ,GACzC,0BAAMR,UAAU,6BAA6BS,IAE/C,yBAAKT,UAAU,aAAaW,wBAAyB,CAAEC,OAAQF,MAI9D,IAAMG,EAAY","file":"component---src-templates-blog-tsx-38564ac4dadf78e194ff.js","sourcesContent":["import React from \"react\"\n\nconst Tags: React.FC<{ tags: string[]; className?: string }> = ({\n  tags,\n  className = \"\",\n}) => {\n  return (\n    <ul className={className}>\n      {tags.map(tag => (\n        <li\n          key={tag}\n          className=\"inline-block px-2 mr-2 last:mr-0 bg-gray-200 text-sm\"\n        >\n          {tag}\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nexport default Tags\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Tags from \"../components/Tags\"\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}) {\n  const { markdownRemark } = data // data.markdownRemark holds your post data\n  const {\n    frontmatter: { title, date, tags },\n    html,\n  } = markdownRemark\n  return (\n    <article className=\"mx-auto my-12 max-w-prose\">\n      <header>\n        <Tags tags={tags} className=\"mb-6\" />\n        <h1 className=\"mb-2 text-4xl font-bold\">{title}</h1>\n        <time className=\"text-secondary mb-4 block\">{date}</time>\n      </header>\n      <div className=\"prose mt-8\" dangerouslySetInnerHTML={{ __html: html }} />\n    </article>\n  )\n}\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    markdownRemark(frontmatter: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        slug\n        title\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}